generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id       Int     @id @default(autoincrement())
  name     String
  phone    String
  address  String
  order   Order?
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  passwordHash String
  role         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Product {
  id           Int               @id @default(autoincrement())
  name         String
  favicon      String
  topbarColor  String
  description  String
  category     String
  price        Float
  salePercent  Int
  urlProduct   String?
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  images       ProductImage[]
  features     ProductFeature[]
  labels       QuantityLabel[]
  reviews      Review[]
  orders       Order[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  imageUrl  String
  position  String
}

model ProductFeature {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  content   String
  position  String
}

model QuantityLabel {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  labelText String
  orders    Order[]
}

model Order {
  id               Int           @id @default(autoincrement())
  customer         Customer      @relation(fields: [customerId], references: [id])
  customerId       Int           @unique
  product          Product       @relation(fields: [productId], references: [id])
  productId        Int
  quantityLabel    QuantityLabel @relation(fields: [quantityLabelId], references: [id])
  quantityLabelId  Int
  totalPrice       Float
  receiveStatus    String
  transferStatus   String
  createdAt        DateTime      @default(now())
}

model Review {
  id         Int           @id @default(autoincrement())
  product    Product       @relation(fields: [productId], references: [id])
  productId  Int
  authorName String
  avatarUrl  String?
  imageUrl   String?
  rating     Int?
  comment    String
  createdAt  DateTime      @default(now())
  replies    ReviewReply[]
}

model ReviewReply {
  id         Int     @id @default(autoincrement())
  review     Review  @relation(fields: [reviewId], references: [id])
  reviewId   Int
  authorName String
  avatarUrl  String?
  comment    String
  createdAt  DateTime @default(now())
}


